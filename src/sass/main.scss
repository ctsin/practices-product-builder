@import "variables";
@import "mixin";

@keyframes loading {
  to {
    transform: rotate(1turn);
  }
}

@keyframes right-in {
  from {
    opacity: 0;
    transform: translate3d($offset, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes right-out {
  to {
    opacity: 0;
    transform: translate3d(-$offset, 0, 0);
  }
}

@keyframes left-in {
  from {
    opacity: 0;
    transform: translate3d(-$offset, 0, 0);
  }

  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes left-out {
  to {
    opacity: 0;
    transform: translate3d(-$offset, 0, 0);
  }
}

.hide {
  position: absolute;
  top: 0;
  left: 0;
  clip: rect(0, 0, 0, 0);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  font-size: 20px;
}

html,
body {
  margin: 0;
  font-size: 0.7rem;
}

body {
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
  font-size: 0.7rem;
  color: $color;
}

#root {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.header {
  display: flex;
  justify-content: space-between;
  margin: 0 $spacing;

  &\@title,
  &\@indicator {
    padding: $spacing 0;
  }

  &\@title {
    &::before {
      content: attr(data-prefix) attr(data-title);
    }
  }
  &\@indicator {
    &::before {
      content: "第 " attr(data-current) "/" attr(data-total) " 步";
    }
  }

  &\@nav {
    display: none;
  }

  @media (min-width: $break-md) {
    justify-content: center;

    &\@title,
    &\@indicator {
      display: none;
    }

    &\@nav {
      display: flex;
      justify-content: center;

      &\:item {
        padding: $spacing;
        text-decoration: none;
        color: inherit;
        cursor: pointer;
        outline: none;

        &:hover,
        &:focus {
          text-decoration: none;
          color: inherit;
        }
      }
    }
  }
}

.body {
  position: relative;
  display: flex;
  flex: 1;
  margin: $spacing;
}

.model,
.color {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  visibility: hidden;

  &.active {
    visibility: visible;
    animation: right-in $duration ease-in both;
  }

  &.left-in {
    animation: left-in $duration ease-in both;
  }

  &.left-out {
    animation: left-out $duration ease-in both;
  }

  &.right-in {
    animation: right-in $duration ease-in both;
  }

  &.right-out {
    animation: right-out $duration ease-in both;
  }
}

.model {
  justify-content: center;
  flex-direction: column;

  &\@set {
    position: relative;
    display: flex;
    flex: 1;

    &:not(:first-child) {
      margin-top: $spacing;
    }
  }

  &\@label {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1;
    border-radius: $radius;
    color: $secondary;
    border: 1px solid currentColor;
    cursor: pointer;

    &::before,
    &::after {
      content: "";
      position: absolute;
      bottom: $spacing * 2;
      left: 50%;
      border: 2px solid;
    }

    &::before {
      @include square($size-2x);
      margin-top: $size-base;
      margin-left: -$size-base;
      border-radius: $radius-round;
      border-color: $background;
    }

    &::after {
      @include size(1.2rem, 0.6rem);
      margin-bottom: 0.75rem;
      margin-left: -0.6rem;
      border-color: transparent;
      transform: rotate(-45deg) scale(0);
    }
  }

  input[type="checkbox"],
  input[type="radio"] {
    &:checked {
      & + label {
        background-color: $secondary;
        border-color: $primary;
        color: $white;

        &::before {
          border-color: rgba($pink, 0.8) transparent transparent;
          background-color: $white;
          animation: loading 0.5s linear infinite;
        }

        &::after {
          border-color: transparent transparent $secondary $secondary;
          transform: rotate(-45deg) scale(1);
          transition: transform $fast cubic-bezier(0.08, 0.22, 0.65, 1.5);
        }
      }
    }
  }

  @media (min-width: $break-md) {
    flex-direction: row;

    &\@set {
      &:not(:first-child) {
        margin-top: unset;
        margin-left: $spacing;
      }
    }
  }
}

.color {
  justify-content: center;
  align-items: center;

  &\@set {
    &:not(:first-child) {
      margin-left: $spacing;
    }
  }

  &\@label {
    position: relative;
    display: flex;
    @include square(2rem);
    border-radius: $radius-round;
    background-color: currentColor;

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate3d(-50%, -50%, 0);
      width: calc(100% + 8px);
      height: calc(100% + 8px);
      border: 2px solid currentColor;
      border-radius: $radius-round;
    }
  }

  input[type="checkbox"],
  input[type="radio"] {
    &:checked {
      & + label {
        &::before {
          border-color: $primary;
        }
      }
    }
  }
}

.footer {
  display: flex;
  align-items: center;
  box-shadow: 0 -3px 3px $shadow;

  &\@total {
    display: none;
  }

  &\@nav {
    display: flex;
    flex: 1;
  }

  .prev,
  .next {
    display: flex;
    align-items: center;
    flex: 1;
    text-decoration: none;
    text-align: center;
    color: inherit;
    background-color: inherit;
    white-space: nowrap;

    &::before {
      content: "";
      @include square(0.5rem);
      margin: $spacing;
      border: 2px solid;
      border-color: transparent transparent currentColor currentColor;
    }

    &::after {
      flex: 1;
    }

    &.hidden {
      display: none;
    }
  }

  .prev {
    &::before {
      transform: rotate(45deg);
    }

    &::after {
      content: attr(data-title);
      margin-right: $spacing-xs;
    }
  }

  .next {
    flex-direction: row-reverse;
    color: $white;
    background-color: $secondary;

    &::before {
      transform: rotate(-135deg);
    }

    &::after {
      content: attr(data-title);
      margin-left: $spacing;
    }

    &:hover,
    &:focus {
      text-decoration: none;
      color: $white;
      background-color: $primary;
    }
  }

  @media (min-width: $break-md) {
    padding: $spacing-xs $spacing;

    &\@total {
      display: flex;
      flex-direction: column;

      &::before,
      &::after {
        display: block;
        line-height: 0.9;
      }

      &::before {
        content: "总计";
      }

      &::after {
        content: "￥" attr(data-amount);
        font-size: 2rem;
      }
    }

    &\@nav {
      flex: 0;
      margin-left: auto;
    }

    .prev,
    .next {
      flex: auto;
      border-radius: $radius-round;
    }

    .prev {
      background-color: $background;
      &::after {
        content: none;
      }
    }

    a[data-title]:not(:first-child) {
      margin-left: $spacing;
    }
  }
}

.toasts {
  position: fixed;
  bottom: $spacing;
  left: 50%;
  transform: translate3d(-50%, 0, 0);

  .toast {
    padding: $spacing-xs $spacing;
    border-radius: $radius-round;
    background-color: $background-dark;
    color: $white;

    &:not(:first-child) {
      margin-top: $spacing;
    }

    &::after {
      content: attr(data-content);
    }
  }
}
